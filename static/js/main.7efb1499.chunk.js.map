{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/MovieList/MovieList.js","Components/Pagination/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","className","onSubmit","this","props","handleSubmit","placeholder","name","onChange","e","handleChange","React","Component","MovieList","handleClick","title","preventDefault","fetch","then","response","json","setState","dataMovie","catch","err","console","error","state","Movies","map","item","i","Title","Year","src","Poster","width","height","alt","onClick","imdbID","Plot","Released","Runtime","Genre","Director","imdbRating","Pagination","pageLinks","log","active","currentPage","push","nextPage","href","pages","App","value","target","Query","Search","totalResults","pageNumber","numberOfPages","Math","floor","searchOMDB","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7efb1499.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Searchbar.css';\r\n\r\n/**\r\n * The purpose of the search bar component is to search for movies in the app.\r\n * Home to the search buttons.\r\n */\r\n\r\nclass SearchBar extends React.Component{\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-fields\" >\r\n                    <form onSubmit={this.props.handleSubmit}>\r\n                        <input placeholder=\"Movie Title\" name='Title'onChange={(e)=>this.props.handleChange(e, 'Title')}/>\r\n                        <button >Search Movies</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './MovieList.css';\r\n\r\n/**\r\n * The purpose of the MovieList component is to simulate what a returned list of movies would lokk like in the filmo search app (after querying the OMDB API)\r\n * To help this simulation, the MovieList wull make use of the Movies component repeatedly.\r\n */\r\n\r\nclass MovieList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataMovie: [],\r\n        };\r\n    }\r\n\r\n    handleClick=(e, title)=>{\r\n        e.preventDefault()\r\n\r\n        fetch(`https://www.omdbapi.com/?i=tt3896198&t=${title}}&apikey=5af2f3d1`)\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .then(response => {\r\n            this.setState({dataMovie: response})\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {dataMovie} = this.state\r\n        return(\r\n            <div className=\"movie-container\">\r\n                {this.props.Movies.map((item, i) => (\r\n                    <div className=\"movie-list\" key={i}>\r\n                        <h1 className=\"title\">{item.Title} - <span>{item.Year}</span></h1>\r\n                        <img src={item.Poster} width={'200px'} height={'200px'} alt={`${item.Title}`} onClick={(e)=>this.handleClick(e, item.Title)} />\r\n                        {dataMovie.imdbID === item.imdbID ? <div className=\"results-container\">\r\n                            <p className=\"temp-date\"> Synopsis: {dataMovie.Plot}</p>\r\n                            <h2 className=\"temp-date\"> Release Date: {dataMovie.Released}</h2>\r\n                            <h3 className=\"temp-date\"> Runtime: {dataMovie.Runtime}</h3>\r\n                            <h4 className=\"temp-date\"> Genre: {dataMovie.Genre}</h4>\r\n                            <h5 className=\"temp-date\"> Director: {dataMovie.Director}</h5>\r\n                            <h6 className=\"temp-date\"> IMDB Rating: {dataMovie.imdbRating}</h6>\r\n                        </div>:\r\n                        null}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\n\r\n/**\r\n * Home to the pagination feature's infrastructure and components, particularly the previous, next and current page functionalities.\r\n * A few CSS components included for styling and aesthetics.\r\n */\r\n\r\nclass Pagination extends React.Component{\r\n\r\n    render() {\r\n        const pageLinks = []\r\n    console.log(this.props)\r\n    console.log(pageLinks)\r\n\r\n    for(let i = 1; i <= this.props.pages + 1; i++) {\r\n        let active =this.props.currentPage === i ? 'active' : '';\r\n        pageLinks.push(<li className={`waves-effect ${active}`} key={i} onClick={(e) => this.props.nextPage(e, i)}><a href=\"*\">{i}</a></li>)\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <ul className=\"pagination\">\r\n                    { this.props.currentPage > 1 ? <li className={`waves-effect`} onClick={(e) => this.props.nextPage(e, this.props.currentPage - 1)}><a href=\"*\">Prev</a></li> : ''}\r\n                    { pageLinks }\r\n                    { this.props.currentPage < this.props.pages + 1 ? <li className={`waves-effect`} onClick={(e) => this.props.nextPage(e, this.props.currentPage + 1)}><a href=\"*\">Next</a></li> : ''}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\nimport './App.css';\nimport SearchBar from './Components/SearchBar/SearchBar';\nimport './Components/SearchBar/Searchbar.css';\nimport MovieList from './Components/MovieList/MovieList';\nimport Pagination from './Components/Pagination/Pagination';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      Movies: [],\n      Query: '',\n      totalResults: 0,\n      currentPage: 1,\n    };\n  }\n\n  handleChange=(e, name) =>{\n    const value = e.target.value;\n    this.setState({Query:value})\n  }\n\n  handleSubmit=(e)=>{\n    e.preventDefault()\n    console.log('test')\n\n    fetch(`https://www.omdbapi.com/?s=${this.state.Query}&apikey=5af2f3d1`)\n    .then(response => {\n      return response.json()\n    })\n    .then(response => {\n      this.setState({Movies: response.Search, totalResults: response.totalResults})\n    })\n    .catch(err => {\n      console.error(err);\n    });\n  }\n\n  //This method supports the pagination feature in that it traverses through the api every time the pages are being clicked.\n  nextPage = (e, pageNumber) => {\n    e.preventDefault()\n\n    fetch(`https://www.omdbapi.com/?s=${this.state.Query}&apikey=5af2f3d1&page=${pageNumber}`)\n    .then(response => {\n      return response.json()\n    })\n    .then(response => {\n      this.setState({Movies: response.Search, currentPage: pageNumber})\n      console.log(response)\n    })\n    .catch(err => {\n      console.error(err);\n    });\n  }\n\n  render() {\n    //This component ensures that the movie results are shown in batches of 10.\n    const numberOfPages = Math.floor(this.state.totalResults / 10);\n    console.log(this.state.totalResults, numberOfPages, this.state.currentPage)\n\n    return(\n      <div className=\"App\">\n        <h1>FILMO SEARCH</h1>\n        <SearchBar handleChange={this.handleChange} handleSubmit={this.handleSubmit} searchOMDB={this.searchOMDB} />\n        {this.state.Movies && <MovieList Movies={this.state.Movies}/>}\n        {this.state.totalResults > 10 ? <Pagination pages={numberOfPages} nextPage={this.nextPage} currentPage={this.state.currentPage} /> : ''}\n      </div>\n    );\n  }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}